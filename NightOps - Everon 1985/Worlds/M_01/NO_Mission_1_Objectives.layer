$grp SCR_EditorTask : "{3AD0A1257870E6C7}Prefabs/Tasks/CustomTask.et" {
 obj_primaryTsk_1 {
  components {
   RplComponent "{5975177038D51BCA}" {
   }
  }
  coords 10907.439 24.538 11737.405
  m_sName "Capture Com Truck"
  m_sDescription "Capture the Soviet Com Truck to win the mission"
  m_bNotifyAssignment 1
 }
 obj_secondaryTsk_2 {
  components {
   RplComponent "{5975177013998870}" {
   }
  }
  coords 11383.706 69.407 11193.036
  m_sName "Secure Lighthouse"
  m_sDescription "SECONDARY: Secure the Lighthouse  to unlock another spawn position"
  m_sMapIconName "Task_Seize"
  m_sTaskListIconName "Task_Seize"
  m_bNotifyAssignment 1
  {
   SCR_FactionControlTriggerEntity trg_secondaryTsk_2 {
    coords 3.274 0 3.9
    TriggerShapeType Sphere
    SphereRadius 50
    TriggerActivationType "First change"
    PeriodicQueries 1
    ClassFilter "ChimeraCharacter"
    OnActivate ""\
    ""\
    "		SCR_HintManagerComponent hintComponent = SCR_HintManagerComponent.GetInstance();"\
    "		hintComponent.ShowCustomHint(\"Spawnpoint at LIGHTHOUSE available\", \"SPAWNPOINT UNLOCKED\", 10);"\
    "		"\
    "		SCR_SpawnPoint.Cast(GetWorld().FindEntityByName(\"spawnPoint_2\")).SetFactionKey(\"US\"); //Changes the preplaced (attached to a vehicle) spawnpoint's factionkey from \"0\" (as inactive) to \"US\"."\
    "		"\
    "		SCR_BaseTask task = SCR_BaseTask.Cast(GetGame().GetWorld().FindEntityByName(\"obj_secondaryTsk_2\"));"\
    "		task.Finish();"\
    "		GetTaskManager().FinishTask(task);"\
    "	"
    m_sOwnerFactionKey "US"
    m_fFriendlyRatioLimit 1
   }
  }
 }
 obj_secondaryTsk_3 {
  components {
   RplComponent "{597517701F7431BB}" {
   }
  }
  coords 11156.204 31.992 11594.38
  m_sName "Secure Radio Uplink"
  m_sDescription "SECONDARY: Secure the Radio Uplink to unlock another spawn position"
  m_sMapIconName "Task_Seize"
  m_sTaskListIconName "Task_Seize"
  m_bNotifyAssignment 1
  {
   SCR_FactionControlTriggerEntity trg_secondaryTsk_3 {
    components {
     RplComponent "{597517700187FC76}" {
     }
    }
    coords 3.274 0 3.898
    TriggerShapeType Sphere
    SphereRadius 50
    TriggerActivationType "First change"
    PeriodicQueries 1
    ClassFilter "ChimeraCharacter"
    OnActivate ""\
    ""\
    "		SCR_HintManagerComponent hintComponent = SCR_HintManagerComponent.GetInstance();"\
    "		hintComponent.ShowCustomHint(\"Spawnpoint at RADIO UPLINK available\", \"SPAWNPOINT UNOCKED\", 10);"\
    "		"\
    "		SCR_SpawnPoint.Cast(GetWorld().FindEntityByName(\"spawnPoint_3\")).SetFactionKey(\"US\"); //Changes the preplaced (attached to a vehicle) spawnpoint's factionkey from \"0\" (as inactive) to \"US\"."\
    "		"\
    "		SCR_BaseTask task = SCR_BaseTask.Cast(GetGame().GetWorld().FindEntityByName(\"obj_secondaryTsk_3\"));"\
    "		task.Finish();"\
    "		GetTaskManager().FinishTask(task);"\
    "	"
    m_sOwnerFactionKey "US"
    m_fFriendlyRatioLimit 1
   }
  }
 }
}
SCR_TriggerTask obj_secondaryTsk_1 : "{7259F0B101761BD5}Prefabs/Tasks/MoveTask.et" {
 components {
  RplComponent "{597517706FF88EB6}" {
  }
 }
 coords 11372.521 17.354 11831.726
 m_sName "Claim APC (Mobile Spawnpoint)"
 m_sDescription "SECONDARY: Claim the empty APC to deploy a mobile spawnpoint."
 m_eAssignMessage NONE
 m_eUnassignMessage NONE
 {
  SCR_BaseFactionTriggerEntity trg_secondaryTsk_1 {
   ID "55D072570E7E8ABF"
   components {
    RplComponent "{597517701A5762C6}" {
    }
   }
   coords -2.036 0.021 -2.813
   angleY -29.13
   TriggerShapeType "Oriented Bounding Box"
   SphereRadius 2
   BoxMins 0 0 0
   BoxMaxs 7 2 2.5
   ShapeColor 0.502 0 0 0.392
   TriggerActivationType "First change"
   UpdatePeriod 3
   OnActivate ""\
   "		SCR_HintManagerComponent hintComponent = SCR_HintManagerComponent.GetInstance();"\
   "		hintComponent.ShowCustomHint(\"This is a unique APC which attaches a mobile spawnpoint to it as long as the vehicle stays alive.\", \"Moving Spawnpoint\", 30);"\
   "		"\
   "		SCR_SpawnPoint.Cast(GetWorld().FindEntityByName(\"spawnPoint_1\")).SetFactionKey(\"US\"); //Changes the preplaced (attached to a vehicle) spawnpoint's factionkey from \"0\" (as inactive) to \"US\"."\
   "		"\
   "		SCR_BaseTask task = SCR_BaseTask.Cast(GetGame().GetWorld().FindEntityByName(\"obj_secondaryTsk_1\"));"\
   "		task.Finish();"\
   "		GetTaskManager().FinishTask(task);"\
   "		"\
   "	"
   m_sOwnerFactionKey "US"
  }
 }
}
SCR_EliminateTask obj_primaryTsk_2 : "{B866318EB7E84833}Prefabs/Tasks/EliminateTask.et" {
 components {
  RplComponent "{59751770343AEC64}" {
  }
 }
 coords 10907.439 24.538 11737.405
 m_sName "Com Truck must survive"
 m_sDescription "PRIMARY: If the Com Truck gets destroyed by any means, the mission fails"
 m_fRange 1
 {
  GenericEntity DestroyTruckLogic {
   coords -113.405 -5.2 167.508
   userScript "	// code here"
   constructor ""\
   "		SetEventMask(EntityEvent.INIT);"\
   "	"
   EOnInit ""\
   "		SCR_EliminateTask task = SCR_EliminateTask.Cast(GetWorld().FindEntityByName(\"obj_primaryTsk_2\"));"\
   "		if (task)"\
   "		{"\
   "			task.GetOnEliminatedInvoker().Insert(OnTaskComplete);"\
   "		}"\
   "	}"\
   "	"\
   "	void OnTaskComplete(SCR_BaseTask task) "\
   "	{"\
   "		SCR_PopUpNotification.GetInstance().PopupMsg(\"COM TRUCK DESTROYED\");"\
   "		"\
   "		SCR_BaseGameMode gameMode = SCR_BaseGameMode.Cast(GetGame().GetGameMode()); // Get the game mode for the end script"\
   "        Faction faction = GetGame().GetFactionManager().GetFactionByKey(\"USSR\"); // Get the winning faction Key"\
   "        int usIndex = GetGame().GetFactionManager().GetFactionIndex(faction); // Get the winning faction key's index"\
   "        gameMode.EndGameMode(SCR_GameModeEndData.CreateSimple(SCR_GameModeEndData.ENDREASON_EDITOR_FACTION_VICTORY, -1, usIndex)); // End the mission!"\
   "	"
  }
 }
}